// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package bootstrap

import (
	"github.com/dedyf5/resik/app/http/fw/echo"
	"github.com/dedyf5/resik/app/http/handler/general"
	handler2 "github.com/dedyf5/resik/app/http/handler/transaction"
	"github.com/dedyf5/resik/config"
	"github.com/dedyf5/resik/core/transaction/service"
	"github.com/dedyf5/resik/ctx/log"
	"github.com/dedyf5/resik/drivers"
	config2 "github.com/dedyf5/resik/entities/config"
	"github.com/dedyf5/resik/repositories/transaction"
	"github.com/dedyf5/resik/utils/validator"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeHTTP() (*App, func(), error) {
	config := _wireConfigValue
	app := config.App
	tag := app.LangDefault
	configLog := config.Log
	logLog := log.Get(configLog)
	serverHTTP := newServerHTTP(config, tag, logLog)
	handlerHandler := handler.New(config)
	validate := validator.New(tag)
	echoEcho := echo.New(validate)
	sqlConfig := config.Database
	sqlEngine := sqlConfig.Engine
	db, cleanup, err := drivers.NewMySQLConnection(sqlConfig)
	if err != nil {
		return nil, nil, err
	}
	gormDB, cleanup2, err := drivers.NewGorm(sqlEngine, db, sqlConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	transactionRepo := transaction.New(gormDB)
	serviceService := service.New(transactionRepo, config)
	handler3 := handler2.New(echoEcho, logLog, serviceService, config)
	router := newRouter(config, handlerHandler, handler3)
	bootstrapApp, cleanup3, err := newApp(serverHTTP, router)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return bootstrapApp, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

var (
	_wireConfigValue = *configGeneral
)

// wire.go:

var configGeneral = config.Load()

var configGeneralSet = wire.NewSet(wire.Value(*configGeneral), wire.FieldsOf(new(config.Config), "APP", "HTTP", "Database", "Log"), wire.FieldsOf(new(config2.App), "Env", "LangDefault"), wire.FieldsOf(new(drivers.SQLConfig), "Engine"))

var utilSet = wire.NewSet(validator.New, wire.Bind(new(validator.IValidate), new(*validator.Validate)), log.Get)

var fwSet = wire.NewSet(echo.New, wire.Bind(new(echo.IEcho), new(*echo.Echo)))

var connSet = wire.NewSet(drivers.NewMySQLConnection, drivers.NewGorm)

var gormRepoSet = wire.NewSet(transaction.New, wire.Bind(new(transaction.ITransaction), new(*transaction.TransactionRepo)))

var serviceSet = wire.NewSet(service.New, wire.Bind(new(service.IService), new(*service.Service)))

var handlerSet = wire.NewSet(handler.New, handler2.New)
