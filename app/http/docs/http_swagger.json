{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/": {
            "get": {
                "description": "App info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "home"
                ],
                "summary": "Get Home",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.Home"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login by username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "description": "Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UserCredential"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transaction/merchant/{id}/omzet": {
            "get": {
                "description": "Get merchant omzet by merchant id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get Merchant Omzet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Merchant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-02-01 13:45:00",
                        "name": "datetime_end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-02-01 13:45:00",
                        "name": "datetime_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ],
                        "type": "string",
                        "example": "day",
                        "name": "mode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "period",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.MerchantOmzet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transaction/outlet/{id}/omzet": {
            "get": {
                "description": "Get outlet omzet by outlet id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get Outlet Omzet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Outlet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-02-01 13:45:00",
                        "name": "datetime_end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-02-01 13:45:00",
                        "name": "datetime_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year"
                        ],
                        "type": "string",
                        "example": "day",
                        "name": "mode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "period",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.OutletOmzet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.LoginPost": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "username": {
                    "type": "string",
                    "example": "sakisaki"
                }
            }
        },
        "response.Home": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string",
                    "example": "Resik"
                },
                "lang": {
                    "$ref": "#/definitions/response.Lang"
                },
                "version": {
                    "type": "string",
                    "example": "0.1"
                }
            }
        },
        "response.Lang": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "string",
                    "example": "id"
                },
                "default": {
                    "type": "string",
                    "example": "en"
                },
                "request": {
                    "type": "string",
                    "example": "id"
                }
            }
        },
        "response.MerchantOmzet": {
            "type": "object",
            "properties": {
                "merchant_name": {
                    "type": "string",
                    "example": "Resik Merchant"
                },
                "omzet": {
                    "type": "number",
                    "example": 1000000.5
                },
                "period": {
                    "type": "string",
                    "example": "2024-02-06"
                }
            }
        },
        "response.OutletOmzet": {
            "type": "object",
            "properties": {
                "merchant_name": {
                    "type": "string",
                    "example": "Resik Merchant"
                },
                "omzet": {
                    "type": "number",
                    "example": 50000.5
                },
                "outlet_name": {
                    "type": "string",
                    "example": "Resik Outlet"
                },
                "period": {
                    "type": "string",
                    "example": "2024-02-06"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/response.ResponseMeta"
                },
                "status": {
                    "$ref": "#/definitions/response.ResponseStatus"
                }
            }
        },
        "response.ResponseMeta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "$ref": "#/definitions/response.ResponsePage"
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "response.ResponsePage": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer",
                    "example": 3
                },
                "first": {
                    "type": "integer",
                    "example": 1
                },
                "last": {
                    "type": "integer",
                    "example": 9
                },
                "next": {
                    "type": "integer",
                    "example": 4
                },
                "previous": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "response.ResponseStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "200.1"
                },
                "detail": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "response.UserCredential": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "xxx.xxx.xxx"
                },
                "username": {
                    "type": "string",
                    "example": "sakisaki"
                }
            }
        }
    }
}